name: Build and push images
run-name: Build and push images ${{ inputs.repo }}:${{ inputs.tag-default}}, and ${{ inputs.repo }}:${{ inputs.tag-static }} from ${{ github.ref_type }} ${{ github.ref_name }}${{ github.ref_type == 'branch' && ' @ ' || '' }}${{ github.ref_type == 'branch' && github.sha || '' }}

concurrency:
  group: ${{ github.workflow }} for ${{ github.ref_type }} ${{ github.ref_name }} generates ${{ inputs.repo }}:${{ inputs.tag-default}}, and ${{ inputs.repo }}:${{ inputs.tag-static }}

on:
  workflow_call:
    inputs:
      repo:
        type: string
        default: mentalsmash/uno
      tag-default:
        type: string
        required: true
      tag-static:
        type: string
        required: true
      middleware-default:
        type: string
        default: uno_middleware_connext
      middleware-static:
        type: string
        default: uno.middleware.native
      base-image-default:
        type: string
        default: ubuntu:22.04
      base-image-static:
        type: string
        default: ubuntu:24.04
      badge-default-version:
        type: string
      badge-default-base:
        type: string
      badge-static-version:
        type: string
      badge-static-base:
        type: string


  workflow_dispatch:
    inputs:
      repo:
        description: Base name of the generated images
        type: string
        default: mentalsmash/uno
      tag-default:
        description: Tag for the "default" image
        type: string
        default: latest
      tag-static:
        description: Tag for the "static" image
        type: string
        default: latest-static
      middleware-default:
        description: Middleware id for the "default" image
        type: string
        default: uno_middleware_connext
      middleware-static:
        description: Middleware id for the "static" image
        type: string
        default: uno.middleware.native
      base-image-default:
        description: Base OS for the "default" image
        type: string
        default: ubuntu:22.04
      base-image-static:
        description: Base OS for the "static" image
        type: string
        default: ubuntu:24.04
      badge-default-version:
        description: Gist id of a badge for the version of the "default" image
        type: string
      badge-default-base:
        description: Gist id of a badge for the base image of the "default" image
        type: string
      badge-static-version:
        description: Gist id of a badge for the version of the "static" image
        type: string
      badge-static-base:
        description: Gist id of a badge for the base image of the "static" image
        type: string


jobs:
  push_images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push default image
        uses: docker/build-push-action@v5
        with:
          file: docker/Dockerfile
          tags: ${{ inputs.repo }}:${{ inputs.tag-default }}
          push: true
          context: .
          build-args: |
            UNO_MIDDLEWARE=${{ inputs.middleware-default }}
            BASE_IMAGE=${{ inputs.base-image-default }}

      - name: Build and push static image
        uses: docker/build-push-action@v5
        with:
          file: docker/Dockerfile
          tags: ${{ inputs.repo }}:${{ inputs.tag-static }}
          push: true
          context: .
          build-args: |
            UNO_MIDDLEWARE=${{ inputs.middleware-static }}
            BASE_IMAGE=${{ inputs.base-image-static }}


  update_badges:
    runs-on: ubuntu-latest
    needs: push_images
    steps:
    - name: Generate derived variables
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Update default version badge
      if: inputs.badge-default-version
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_UPDATE_TOKEN }}
        gistID: ${{ inputs.badge-default-version }}
        filename: uno-badge-image-default-version-${{ input.tag-default }}.json
        label: version
        message: ${{ github.ref_name }}${{ github.ref_type == 'branch' && '@' || '' }}${{ github.ref_type == 'branch' && steps.vars.outputs.sha_short || '' }}
        color: ${{ github.ref_type == 'tag' && 'green' || 'orange' }}

    - name: Update default base image badge
      if: inputs.badge-default-base
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_UPDATE_TOKEN }}
        gistID: ${{ inputs.badge-default-base }}
        filename: uno-badge-image-default-base-${{ input.tag-default }}.json
        label: base image
        message: ${{ inputs.base-image-default }}
        color: "blue"

    - name: Update static base badge
      if: inputs.badge-static-version
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_UPDATE_TOKEN }}
        gistID: ${{ inputs.badge-static }}
        filename: uno-badge-image-static-version-${{ input.tag-static }}.json
        label: version
        message: ${{ github.ref_name }}${{ github.ref_type == 'branch' && '@' || '' }}${{ github.ref_type == 'branch' && steps.vars.outputs.sha_short || '' }}
        color: ${{ github.ref_type == 'tag' && 'green' || 'orange' }}

    - name: Update static base image badge
      if: inputs.badge-static-base
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_UPDATE_TOKEN }}
        gistID: ${{ inputs.badge-static-base }}
        filename: uno-badge-image-static-base-${{ input.tag-static }}.json
        label: base image
        message: ${{ inputs.base-image-static }}
        color: "blue"

