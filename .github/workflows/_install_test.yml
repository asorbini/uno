name: Install Test Image
run-name: |
  install test (${{inputs.install-rti-license && 'default' || 'static'}}) - ${{inputs.tag}} on ${{inputs.platform}} [${{github.ref_type == 'branch' && 'nightly' || 'stable'}}, ${{github.ref_name}}]

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      platform:
        type: string
        required: true
      install-rti-license:
        type: boolean
        default: true

jobs:
  test-config:
    runs-on: ubuntu-latest
    outputs:
      BUILD_TYPE: ${{ steps.config.outputs.BUILD_TYPE }}
      RUNNER: ${{ steps.config.outputs.RUNNER }}
    steps:
      - name: "Generate test config"
        id: config
        run: |
          case "${{github.ref_type}}" in
            tag)
              build_type=stable
              ;;
            branch)
              build_type=nightly
              ;;
          esac
          (
            case "${{ inputs.platform }}" in
              arm64)
                case "${{inputs.install-rti-license}}" in
                  true)
                    # Force full test suite to run on "beefier" rpi5 nodes
                    printf -- "RUNNER='%s'\n" '["self-hosted", "linux", "arm64", "rpi5"]'
                    ;;
                  *)
                    # Other test suites can run on any arm64 node
                    printf -- "RUNNER='%s'\n" '["self-hosted", "linux", "arm64"]'
                    ;;
                esac
                ;;
              amd64)
                printf -- "RUNNER='%s'\n" '"ubuntu-latest"'
                ;;
            esac
            echo BUILD_TYPE=${build_type}
          ) >> ${GITHUB_OUTPUT}

  test-spec-docker:
    needs: test-config
    runs-on: ubuntu-latest
    steps:
      - name: Clone uno
        uses: actions/checkout@v4
        with:
          path: src/uno
          submodules: true
    
      - name: Clone build support files
        uses: actions/checkout@v4
        with:
          repository: mentalsmash/uno-ci
          token: ${{ secrets.UNO_CI_PAT }}
          ref: master
          path: src/uno-ci

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        if: inputs.platform != 'amd64'

      - name: "Create a UVN from spec using docker"
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip3 install pytest

          RTI_LICENSE_FILE=$( [ "${{inputs.install-rti-license}}" != true ] || echo src/uno-ci/resource/rti/rti_license.dat) \
          UNO_IMAGE=${{inputs.tag}} \
          PLATFORM=${{inputs.platform}} \
          FORCE_PULL=yes \
          pytest -s -v src/uno/test/install/test_install_docker.py


