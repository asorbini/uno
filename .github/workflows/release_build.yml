name: Release (Build Images)
run-name: Build ${{inputs.image-type}} image with ${{inputs.uno-middleware}} on ${{inputs.base-image}} from ${{github.ref_type}} ${{github.ref_name}}${{github.ref_type == 'branch' && '@' || ''}}${{github.ref_type == 'branch' && github.sha || ''}}

on:
  workflow_call:
    inputs:
      image-type:
        type: string
        required: true
      uno-middleware:
        type: string
        required: true
      base-image:
        type: string
        required: true
      tags-config:
        type: string
        required: true
      flavor-config:
        type: string
        required: true

concurrency:
  group: release-build-${{github.ref}}-${{inputs.image-type}}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone uno
        uses: actions/checkout@v4
        with:
          path: src/uno
          submodules: true

      - name: Clone ARM support files
        uses: actions/checkout@v4
        with:
          repository: mentalsmash/uno-ci-arm
          token: ${{ secrets.UNO_CI_ARM_PAT }}
          ref: master
          path: src/uno-ci-arm
        if: inputs.uno-middleware == 'uno_middleware_connext'

      - name: Configure build
        id: config
        run: |
          # Configure ARM support
          case '${{ inputs.uno-middleware }}' in
            uno_middleware_connext)
              cp src/uno-ci-arm/resource/rti/rti.connext-7.1.0-cp310-cp310-linux_aarch64.whl \
                 src/uno
              ;;
          esac

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract image metadata
        id: meta-github
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: ${{ inputs.tags-config }}
          flavor: ${{ inputs.flavor-config }}

      - name: Log in to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Build images and push to GitHub
        uses: docker/build-push-action@v5
        with:
          file: src/uno/docker/Dockerfile
          tags: ${{ steps.meta-github.outputs.tags }}
          labels: ${{ steps.meta-github.outputs.labels }}
          push: true
          context: src/uno
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE=${{ inputs.base-image }}
            UNO_MIDDLEWARE=${{ inputs.uno-middleware }}

