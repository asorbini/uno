name: Release Step (Push Image)
run-name: |
  release (${{inputs.flavor}}) - push image [${{github.ref_type == 'branch' && 'nightly' || 'stable'}}, ${{github.ref_name}}]

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      flavor:
        type: string
        required: true
      tags-config:
        type: string
        required: true
      flavor-config:
        type: string
        required: true

concurrency:
  group: release-push-images-${{ github.ref }}-${{ inputs.flavor }}

jobs:
  push:
    runs-on: ubuntu-latest
    steps:
      - name: Clone uno
        uses: actions/checkout@v4
        with:
          path: src/uno
          submodules: true
 
      - name: Extract Docker Hub metadata
        id: meta-docker
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository }}
          tags: ${{ inputs.tags-config }}
          flavor: ${{ inputs.flavor-config }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
    
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Tag images on Docker Hub
        run: |
          src/uno/scripts/tag_release_images.py \
            -t ${{inputs.tag}} -m "${{steps.meta-docker.outputs.json}}"

      - name: Extract GitHub metadata
        id: meta-gh
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: ${{ inputs.tags-config }}
          flavor: ${{ inputs.flavor-config }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
    
      - name: Log in to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Tag images on GitHub
        run: |
          src/uno/scripts/tag_release_images.py \
            -t ${{inputs.tag}} -m "${{steps.meta-gh.outputs.json}}"
